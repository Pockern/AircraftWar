@startuml
'https://plantuml.com/class-diagram

Game ..> AircraftFactory
Game ..> AbstractAircraft

AircraftFactory ..> AbstractAircraft

AircraftFactory <|.. MobEnemyFactory
AircraftFactory <|.. EliteEnemyFactory
AircraftFactory <|.. BossEnemyFactory

AbstractAircraft <|-- MobEnemy
AbstractAircraft <|-- EliteEnemy
AbstractAircraft <|-- BossEnemy

MobEnemyFactory   ..> MobEnemy
EliteEnemyFactory ..> EliteEnemy
BossEnemyFactory  ..> BossEnemy

class Game {

}

interface AircraftFactory {
    + createAircraft(int locationX, int locationY, int speedX, int speedY, int hp): List<AbstractAircraft>
}

class MobEnemyFactory {
    - aircraft: List<AbstractAircraft>
    + MobEnemyFactory()
    + createAircraft(int locationX, int locationY, int speedX, int speedY, int hp): List<AbstractAircraft>
}

class EliteEnemyFactory {
    - aircraft: List<AbstractAircraft>
    + EliteEnemyFactory()
    + createAircraft(int locationX, int locationY, int speedX, int speedY, int hp): List<AbstractAircraft>
}

class BossEnemyFactory {
    - aircraft: List<AbstractAircraft>
    + BossEnemy()
    + createAircraft(int locationX, int locationY, int speedX, int speedY, int hp): List<AbstractAircraft>
}

abstract class AbstractAircraft {
    # maxHp: int
    # hp   : int

    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease): void
    + increaseHp(int increase): void
    + getHp(): int
    + {abstract} shoot(): List<BaseBullet>
}

class MobEnemy {

    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward(): void
    + shoot(): List<BaseBullet>
}

class EliteEnemy {
    - bullet_direction: int
    - shootNum: int
    - power: int

    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward(): void
    + shoot(): List<BaseBullet>
}

class BossEnemy {

    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward(): void
    + shoot(): List<BaseBullet>
    + props_drop(): List<AbstractProps>
}

@enduml